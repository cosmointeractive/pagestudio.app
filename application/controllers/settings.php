<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
/**
 * PageStudio
 *
 * A web application for managing website content. For use with PHP 5.4+
 * 
 * This application is based on the PHP framework, 
 * PIP http://gilbitron.github.io/PIP/. PIP has been greatly altered to 
 * work for the purposes of our development team. Additional resources 
 * and concepts have been borrowed from CodeIgniter,
 * http://codeigniter.com for further improvement and reliability. 
 *
 * @package     PageStudio
 * @author      Cosmo Mathieu <cosmo@cosmointeractive.co>   
 */
 
// ------------------------------------------------------------------------

class Settings extends MY_Controller
{
    /**
     * Array containing errors generated by object methods
     * @var        array $errors
     */
    private     $errors = array();
           
    public function general()
    {
        $bc = new Breadcrumb();
        $bc->addCrumb('Settings', BASE_URL . 'settings/general');
        
        $opModel = $this->loadModel('settings_model');
        $options = mergeArrayObjectsToArray( $opModel->retrieve(), 'option_name', 'option_value' );
        $records = array();
        $records[0] = $options;
        $postValues = array();
        
        // Check if _POST form submitted and perform actions 
        if (Input::exists('post')) {                
            if (Input::get('update')) {
                /** 
                 * Check if a token was submitted and validate it. This hepls
                 * prevent the same form with the same data from being 
                 * submitted twice, and CSRF.
                 */
                if (Token::validate(Input::get('token'))) {
                    if (Input::get('site_name')) $postValues['site_name'] = Input::get('site_name');
                    if (Input::get('site_meta_description')) $postValues['site_meta_description'] = Input::get('site_meta_description');
                    if (Input::get('site_url')) $postValues['site_url'] = Input::get('site_url');
                    if (Input::get('blog_url')) $postValues['blog_url'] = Input::get('blog_url');
                    if (Input::get('blog_landing_page')) $postValues['blog_landing_page'] = Input::get('blog_landing_page');
                    if (Input::get('default_date_format')) $postValues['default_date_format'] = Input::get('default_date_format');
                    if (Input::get('default_time_format')) $postValues['default_time_format'] = Input::get('default_time_format');
                    if (Input::get('tracking_code')) $postValues['tracking_code'] = Input::get('tracking_code');
                    if (empty(Input::get('tracking_code'))) $postValues['tracking_code'] = '&nbsp;';
                    
                    $opModel->update($postValues);
                    
                    Session::flash('success', 'Settings updated successfully.');
                    
                } else {
                    $this->errors[] = 'Token mismatch. It looks like you tried to refresh your browser. Try clicking the update button to submit your changes.'; 
                }
                
            }
        }
        unset($_POST);
        
		$template = $this->loadView('settings/general_view');
        $template->set('page', array(
            'title' => 'General Settings',
            'heading' => 'The website settings page',
            'description' => 'Manage website settings',
            'icon' => '<i class="icon x32 icon-settings"></i>'
        ));
        $template->set('bread', $bc->makeBread());
        $template->set('options' , $records);
        $template->set('errors' , $this->errors);
        $template->set('top_action_buttons', 
            '<button class="btn btn-primary" name="submit" onclick="document.getElementById(\'editor\').submit();">Save Settings</button>'
        );
		$template->render();
    }
    
    // --------------------------------------------------------------------
    
    public function blog()
    {
        
    }
    
    // --------------------------------------------------------------------
    
    public function email()
    {
        $bc = new Breadcrumb();
        $bc->addCrumb('Settings', BASE_URL . 'settings/email');
        
        $opModel = $this->loadModel('settings_model');
        $options = mergeArrayObjectsToArray( $opModel->retrieve(), 'option_name', 'option_value' );
        $records = array();
        $records[0] = $options;
        $postValues = array();
        
        // Check if _POST form submitted and perform actions 
        if (Input::exists('post')) {                
            if (Input::get('update')) {
                /** 
                 * Check if a token was submitted and validate it. This hepls
                 * prevent the same form with the same data from being 
                 * submitted twice, and CSRF.
                 */
                if (Token::validate(Input::get('token'))) {
                    if (Input::get('mail_server')) $postValues['mail_server'] = Input::get('mail_server');
                    if (Input::get('mail_login')) $postValues['mail_login'] = Input::get('mail_login');
                    if (Input::get('mail_password')) $postValues['mail_password'] = Input::get('mail_password');
                    if (Input::get('mail_incoming_srv')) $postValues['mail_incoming_srv'] = Input::get('mail_incoming_srv');
                    if (Input::get('mail_outgoing_srv')) $postValues['mail_outgoing_srv'] = Input::get('mail_outgoing_srv');
                    if (Input::get('mail_ssl_on')) $postValues['mail_ssl_on'] = Input::get('mail_ssl_on');
                    if (Input::get('mail_authen_srvc')) $postValues['mail_authen_srvc'] = Input::get('mail_authen_srvc');
                    if (Input::get('mail_incoming_port')) $postValues['mail_incoming_port'] = Input::get('mail_incoming_port');
                    if (Input::get('mail_outgoing_port')) $postValues['mail_outgoing_port'] = Input::get('mail_outgoing_port');
                    $postValues['mail_send_as_html'] = Input::get('mail_send_as_html');
                    
                    if($opModel->update($postValues) ) {
                        Session::flash('success', 'Settings updated successfully.');
                    } else {
                        $this->errors[] = 'An error occurred while saving. Pleaes consult the log file';
                    }
                    
                } else {
                    $this->errors[] = 'Token mismatch. It looks like you tried to refresh your browser. Try clicking the update button to submit your changes.'; 
                }
            }
        } else {
            unset($_POST);
        }
        
		$template = $this->loadView('settings/email_view');
        $template->set('page', array(
            'title' => 'Email Configuration',
            'heading' => 'The email configuration page',
            'description' => 'Manage website email configuration',
            'icon' => '<i class="icon x32 icon-settings"></i>'
        ));
        $template->set('bread', $bc->makeBread());
        $template->set('options' , $records);
        $template->set('errors' , $this->errors);
        $template->set('top_action_buttons', 
            '<button class="btn btn-primary" name="submit" onclick="document.getElementById(\'editor\').submit();">Save Settings</button>'
        );
		$template->render();
    }
    
    // --------------------------------------------------------------------
    
    public function media()
    {
        
    }
    
    // --------------------------------------------------------------------
    
    public function apparence()
    {
        
    }
    
    // --------------------------------------------------------------------
    
    public function sitemap()
    {
        
    }

    // --------------------------------------------------------------------
    
    /**
     * Utility method that updates the settings table
     *
     * @access     private
     */
    private function utility()
    {
        
    }
}

/* End of file settings.php */
/* Location: ./application/controllers/settings.php */
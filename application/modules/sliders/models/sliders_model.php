<?php  if ( ! defined('BASEPATH')) exit('No direct script access allowed');
/**
 * PageStudio
 *
 * A web application for managing website content. For use with PHP 5.4+
 * 
 * This application is based on the PHP framework, 
 * PIP http://gilbitron.github.io/PIP/. PIP has been greatly altered to 
 * work for the purposes of our development team. Additional resources 
 * and concepts have been borrowed from CodeIgniter,
 * http://codeigniter.com for further improvement and reliability. 
 *
 * @package     PageStudio
 * @author      Cosmo Mathieu <cosmo@cimwebdesigns.com>   
 */
 
// ------------------------------------------------------------------------

class Sliders_model extends Model 
{	
    /**
     * Array to hold errors generated by this object
     * @var     array 
     */
    private $errors = array();
    
	public function __construct()  
    {  

    } 
    
    /**
     * Get a list of sliders from the database 
     * 
     * @param      
     * @return     object|false
     */ 
    public function getSliders()
	{
        $pdo = new PDO(
            'mysql:dbname=' . Config::get('mysql/db') . ';' .
            'host=' . Config::get('mysql/host'), 
            Config::get('mysql/username'),   //Username
            Config::get('mysql/password')    //Password
        );
        $fpdo = new FluentPDO($pdo);
        $query = $fpdo->from('cimp_pagesliders')
                    ->leftJoin(
                        'cimp_users ON cimp_users.id 
                            = cimp_pagesliders.slider_author'
                    )->select('cimp_pagesliders.*, cimp_users.firstname, cimp_users.lastname');
                    
        $row = $query->fetchAll();
        
        if( !empty($row)) {
            /**
             * Convert the array into an object and return to caller
             */
            return arrayToObject($row);
        } else {
            return false;
        }
	}
    
    // --------------------------------------------------------------------
    
    /**
     * Get a single slider from the database 
     * 
     * @param      int $slider_id The slider ID
     * @return     object|false
     */ 
    public function getSlider($slider_id)
	{
        $slider_id = escape_and_addslashes($slider_id);
        
        $query = Database::getInstance()->get(
            'cimp_pagesliders', array(
                'id', '=', $slider_id
            )
        );
        
        return ( $query->error() == 0) ? $query->results() : false;
	}
    
    // --------------------------------------------------------------------  
    
    /**
     * Get all slide entries associated with the page slider
     * 
     * @param      string $ID The page ID
     * @return     object|false
     */
    public function getSliderEntries($ID)
    {
        $query = Database::getInstance()->query("SELECT * FROM cimp_pageslider_entries WHERE slider_id = ? ORDER BY sort_id", 
                    array($ID)
                );

        if( ! $query->count()) {
            // echo 'No record found';
        } else {
            return $query->results();
        }
    }
    
    // --------------------------------------------------------------------  
	
    /**
     * Return the details for the queried slider
     *
     * @param      array $ID Slider entry ID
     * @return     array
     */
	public static function getEntry($ID)
	{
		$query = Database::getInstance()->query(
            "SELECT slider_title FROM cimp_pagesliders WHERE id = ?", array($ID)
        );

        if( ! $query->count()) {
            //echo 'No record found';
        } else {            
            return $query->results();
        }
	}
    
    // --------------------------------------------------------------------  
    
    /**
     * Creates and entry in the database 
     *
     * @param      string $table  
     * @param      array $fields Array of table key and value
     * @return     bool true or false
     */
	public function addEntry($table, $fields, $slider_author)
	{
		$query = Database::getInstance()->insert(
            $table, $fields
        );
        
        return ( ! $query) ? true : false;
	}
    
    // --------------------------------------------------------------------  
    
    /**
     * Creates and entry in the database 
     *
     * @param      string $table  
     * @param      array $fields Array of table key and value
     * @return     bool true or false
     */
	public function addPhotoEntry($table, $fields, $slider_author, $ID)
	{          
		$query = Database::getInstance()->insert(
            $table, $fields
        );
        
        // Check if query is successful, and get the total photo count for that slideshow 
        if( ! $query) {
            $this->errors[] = 'The query to add the photo details of slideshow ' . $ID . ' failed!';
            log_message('E_USER_ERROR', 'The query to add the photo details of slideshow ' . $ID . ' failed!', __FILE__, __LINE__);
            
            return false;
        } else {
            $query = Database::getInstance()->query(
                "SELECT photo_id FROM cimp_pageslider_entries WHERE slider_id = ?", array($ID)
            );

            if( ! $query->count()) {
                $this->errors[] = 'The query to get the photo count of slideshow ' . $ID . ' failed!';
                log_message('E_USER_ERROR', 'The query to get the photo count of slideshow ' . $ID . ' failed!', __FILE__, __LINE__);
            } else {
                $photo_count = $query->count();
                
                $query = Database::getInstance()->update(
                    "cimp_pagesliders", $ID, array(
                        'slider_author' => $slider_author,
                        'photo_count' => $photo_count,
                        'slider_modified' => date("Y-m-d H:i:s")
                    )
                );
                
                if( ! $query) {
                    $this->errors[] = 'The query to update the photo count of slideshow ' . $ID . ' failed!';
                    log_message('E_USER_ERROR', 'The query to update the photo count of slideshow ' . $ID . ' failed!', __FILE__, __LINE__);
                } else {
                    return true;
                }
            }
        }
        
        // return ( ! $query) ? true : false;
	}
    
    // --------------------------------------------------------------------  
    
    public function getPhotoInfo($ID)
	{
        $query = Database::getInstance()->query(
            "SELECT photo_filename, mime_type FROM cimp_pageslider_entries 
                WHERE photo_id = ?", array($ID)
        );

        if( ! $query->count()) {
            // echo 'No record found';
        } else {
            return $query->results();
        }
	}
    
    // Removes an entry in the slider entries table and updates the slider table image count
    public function deletePhoto($ID, $slider_id, $slider_author)
    {
        $query = Database::getInstance()->delete(
            'cimp_pageslider_entries', array('photo_id', '=', $ID)
        );
        
        // Check if query is successful, and get the total photo count for that slideshow 
        if( ! $query) {
            $this->errors[] = 'The query to delete the slideshow photo ' . $ID . ' failed!';
            log_message('E_USER_ERROR', 'The query to delete the slideshow photo ' . $ID . ' failed!', __FILE__, __LINE__);
            
            return false;
        } else {
            $query = Database::getInstance()->query(
                "SELECT photo_id FROM cimp_pageslider_entries WHERE slider_id = ?", array($slider_id)
            );

            if($query->error()) {
                $this->errors[] = 'The query to get the photo count of slideshow ' . $slider_id . ' failed!';
                log_message('E_USER_ERROR', 'The query to get the photo count of slideshow ' . $slider_id . ' failed!', __FILE__, __LINE__);
            } else {
                $photo_count = $query->count();
                
                $query = Database::getInstance()->update(
                    "cimp_pagesliders", $slider_id, array(
                        'slider_author' => $slider_author,
                        'photo_count' => $photo_count,
                        'slider_modified' => date("Y-m-d H:i:s")
                    )
                );
                
                if( ! $query) {
                    $this->errors[] = 'The query to update the photo count of slideshow ' . $slider_id . ' failed!';
                    log_message('E_USER_ERROR', 'The query to update the photo count of slideshow ' . $slider_id . ' failed!', __FILE__, __LINE__);
                } else {
                    return true;
                }
            }
        }
        
        // return ( ! $query) ? false : true;
    }
    
    // --------------------------------------------------------------------  
    
    /**
     * Updates a specific entry in the database
     *
     * @param      int $ID
     * @param      string $slider_title
     * @param      string $slider_description
     * @param      string $slider_author
     * @return     bool
     */
	public function updateEntry($ID, $slider_title, $slider_description, $slider_author)
	{
		$query = Database::getInstance()->update(
            "cimp_pagesliders", $ID,  array(
                'slider_title' => $slider_title,
                'slider_description' => $slider_description, 
                'slider_modified' => datetime(),
                'slider_author' => $slider_author
            )
        );
        
        return ( ! $query) ? false : true;
	}

    // --------------------------------------------------------------------  
    
    /**
     * Delete slider from the database
     * 
     * @access     Public
     * @param      int $ID Slider ID
     * @return     bool true|false 
     */
    public function deleteSlider($ID) 
    {
        $query = Database::getInstance()->delete(
            'cimp_pagesliders', array('id', '=', $ID)
        );
        
        if( ! $query) {
            $this->errors[] = 'The query to delete slideshow (' . $ID . ') failed!';
            log_message('E_USER_ERROR', 'The query to delete slideshow (' . $ID . ') failed!', __FILE__, __LINE__);
            return false;
        } else {
            return true;
        }
    }
    
}

/* End of file sliders_model.php */
/* Location: ./application/modules/sliders/models/sliders_model.php */